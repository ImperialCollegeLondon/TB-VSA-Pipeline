#!/bin/bash -e

# Submit script for build_vsa which build variable site alignment
# Should be run once all instances of tb_pipeline_sample have
# completed successfully

# This is a bit uneccessary since all it does is run a qsub of the script wrrapper,
# however is provided for consistency with submit_tb_run...

# JCA 210317

usage="Usage: $0 -i /path/to/input/dir -o /path/to/output/dir -r /path/to/reference -e /path/to/exclude.bed -x /path/to/outliers.txt"
real_path=$(realpath $0)
bin_dir=$(dirname ${real_path})

while getopts ":i:o:r:e:x:h" opt; do
        case $opt in 
                i)
                in_dir=$OPTARG
                ;;
		o)
		out_dir=$OPTARG
		;;
		r)
		ref=$OPTARG
		;;
		e)
		exclude=$OPTARG
		;;
		x)
		outliers=$OPTARG
		;;
                h)
                echo $usage
                exit 0
                ;;
                \?)
                echo "Invalid option: -$OPTARG" >&2
                echo $usage >&2
                exit 1
                ;;
        esac
done
shift $((OPTIND-1))

if [ -z ${in_dir} ] || [ -z ${out_dir} ] || [ -z ${ref} ] || [ -z ${exclude} ]; 
then
    echo $usage
    exit 1
fi

if ! [ -d ${in_dir} ]; 
then
    echo ${in_dir} does not exist
    exit 1
fi;

if ! [ -d ${out_dir} ];
then
    echo 
    echo "Creating output directory ${out_dir}"
    mkdir -v -p ${out_dir}
fi;

if ! [ -e ${ref} ];
then
    echo "Reference ${ref} does not exist"
    exit 1
fi;

if ! [ -e ${exclude} ];
then
    echo "Exclude file ${exclude} does not exist"
    exit 1
fi;

if ! [ -e ${outliers} ];
then
    echo "Outlier file  ${outliers} does not exist"
    exit 1
fi;

cmd="qsub -v bin_dir=${bin_dir},in_dir=${in_dir},out_dir=${out_dir},ref=${ref},exclude=${exclude},outliers=${outliers} ${bin_dir}/build_vsa_run"

echo
echo "running command: $cmd"
echo

job_id=$(${cmd})

echo 
echo "Build_vsa job ${job_id} submitted..."
echo

