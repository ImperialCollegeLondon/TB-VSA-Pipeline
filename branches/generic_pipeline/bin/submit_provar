#!/bin/bash -e

# Script to submit tb_pipeline_run as an array job 
# Sizes job automatically based on the number of input data directories
# filenames etc. are passed as variables with qsub's -v argument 

# JCA 210317

usage="Usage: $0 -i /path/to/input/dir -o /path/to/output/dir -r /path/to/reference"
real_path=$(realpath $0)
bin_dir=$(dirname ${real_path})

module load bio-bwa/0.7.15
module load samtools/1.3.1
module load picard/2.6.0

while getopts ":i:o:r:h" opt; do
        case $opt in 
                i)
                in_dir=$OPTARG
                ;;
		o)
		out_dir=$OPTARG
		;;
		r)
		ref=$OPTARG
		;;
                h)
                echo $usage
                exit 0
                ;;
                \?)
                echo "Invalid option: -$OPTARG" >&2
                echo $usage >&2
                exit 1
                ;;
        esac
done
shift $((OPTIND-1))

if [ -z ${in_dir} ] || [ -z ${out_dir} ] || [ -z $ref} ]; 
then
    echo $usage
    exit 1
fi

if ! [ -d ${in_dir} ]; 
then
    echo ${in_dir} does not exist
    exit 1
fi;

if ! [ -d ${out_dir} ];
then
    echo 
    echo "Creating output directory ${out_dir}"
    mkdir -v -p ${out_dir}
fi;

if ! [ -e ${ref} ];
then
    echo "Reference ${ref} does not exist"
    exit 1
fi;

if ! [ -e "${ref}.bwt" ];
then
    echo
    echo "Building BWA index...";
    echo
    bwa index ${ref}
fi

if ! [ -e "${ref}.fai" ];
then
    echo
    echo "Building fasta index...";
    echo
    samtools faidx ${ref}
fi

base=$(basename -s .fa ${ref})
if ! [ -e "${base}.dict" ];
then
    echo
    echo "Building fasta dictionary...";
    echo
    picard CreateSequenceDictionary R=${ref} O=${base}.dict
fi

sample_count=$(ls -1 ${in_dir}|wc -l)

echo
echo "running command: qsub -J 1-${sample_count}:1 ${bin_dir}/provar -i ${in_dir} -o ${out_dir} -r ${ref}"
echo

job_id=$(qsub -J 1-${sample_count}:1 -v bin_dir=${bin_dir},in_dir=${in_dir},out_dir=${out_dir},ref=${ref} ${bin_dir}/provar)

echo 
echo "Array job ${job_id} submitted with ${sample_count} samples..."
echo

